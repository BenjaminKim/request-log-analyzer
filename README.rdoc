= Request-log-analyzer

This is a simple command line tool to analyze request log files of both Rails and
Merb to produce a performance report. Its purpose is to find what actions are best candidates for optimization.

* Analyzes Rails log files (all versions), Merb logs, or any other log format
* Can combine multiple files (handy if you are using logrotate)
* Uses several metrics, including cumulative request time, average request time, process blockers, database and rendering time, HTTP methods and statuses, Rails action cache statistics, etc.) (Sample output: http://wiki.github.com/wvanbergen/request-log-analyzer/sample-output)
* Low memory footprint (server-safe)
* Fast
* MIT licensed

Request log analyzer was designed and built by Willem van Bergen and Bart ten Brinke.

== Installation

Install request-log-analyzer as a Ruby gem:

  $ sudo gem install request-log-analyzer

Alternatively, use the gem from the GitHub gem server:

  $ sudo gem install wvanbergen-request-log-analyzer --source http://gems.github.com

To get the best results out of request-log-analyzer, make sure to 
set up logging correctly: http://wiki.github.com/wvanbergen/request-log-analyzer/configure-logging
for your application.

== Usage

To analyze a log file and produce a performance report, run request-log-analyzer like this:

  $ request-log-analyzer log/production.log

For more details and available command line options, see the project's wiki: http://wiki.github.com/wvanbergen/request-log-analyzer/basic-usage

== Additional information

* Project wiki at GitHub: http://wiki.github.com/wvanbergen/request-log-analyzer
* RDoc documentation: http://wvanbergen.github.com/request-log-analyzer
* wvanbergen's blog posts: http://techblog.floorplanner.com/tag/request-log-analyzer
* barttenbrinke's blog posts: http://movesonrails.com/articles/tag/analyzer
